{"version":3,"sources":["Components/Pin2.js","App.js","serviceWorker.js","Components/SaveBoard.js","Components/Board.js","Components/NewBoard.js","Components/Common.js","index.js"],"names":["Pin2","react_default","a","createElement","BrowserRouter","className","type","onClick","this","props","change","action","src","URL","alt","title","Component","withRouter","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderPins","bind","assertThisInitialized","display","_this2","data","map","item","Components_Pin2","pinImage","pinTitle","key","pinId","id","history","push","pathname","state","pin_Id","Boolean","window","location","hostname","match","SaveBoard","move","displayBoard","addBoard","url","addPin","boards","boardId","boardTitle","pin_id","_this3","pins","imageURL","i","length","Board","displayPin","selected","params","board_id","pinList","pinids","pinIds","j","alert","NewBoard","createBoard","boardname","max_id","newboard","create","newurl","name","value","onChange","text","setState","target","Common","addPinToBoard","createNewBoard","saveState","getState","pinboardId","localStorage","getItem","JSON","parse","defineProperty","setItem","stringify","board","board_copy","bid","pid","newB","content","Switch","Route","path","exact","strict","component","src_App_0","Components_SaveBoard","Components_Board","Components_NewBoard","ReactDOM","render","Components_Common","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"y+DAKMA,mLAEF,OACQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASD,UAAU,SAASE,QAASC,KAAKC,MAAMC,QAASF,KAAKC,MAAME,QACjFV,EAAAC,EAAAC,cAAA,OAAKS,IAAKJ,KAAKC,MAAMI,IAAKC,IAAI,cAAcT,UAAU,UACtDJ,EAAAC,EAAAC,cAAA,SAAIK,KAAKC,MAAMM,gBAPdC,aAcJC,cAAWjB,GCdpBkB,cACJ,SAAAA,EAAYT,GAAO,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAU,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhB,KAAMC,KACDgB,WAAaN,EAAKM,WAAWC,KAAhBN,OAAAO,EAAA,EAAAP,CAAAD,IAChBA,EAAKS,QAAUT,EAAKS,QAAQF,KAAbN,OAAAO,EAAA,EAAAP,CAAAD,IAHAA,4EAKP,IAAAU,EAAArB,KACV,OAAOA,KAAKC,MAAMqB,KAAKC,IAAI,SAACC,GAAW,OACrC/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAD,CAAMpB,IAAKmB,EAAKE,SAAUnB,MAAOiB,EAAKG,SAAUC,IAAKJ,EAAKK,MAAO1B,OAAO,OAAOD,OAAQ,kBAAKmB,EAAKD,QAAQI,EAAKK,6CAK5GC,GACN9B,KAAKC,MAAM8B,QAAQC,KAAK,CACtBC,SAAU,QACVC,MAAO,CAACC,OAAQL,sCAKlB,OACErC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACdG,KAAKiB,sBAzBMT,aAgCHC,cAAWC,GCzBN0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uFCdAC,qBACJ,SAAAA,IAAa,IAAA9B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAyC,IACX9B,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA6B,GAAAzB,KAAAhB,QACK0C,KAAO/B,EAAK+B,KAAKxB,KAAVN,OAAAO,EAAA,EAAAP,CAAAD,IACZA,EAAKgC,aAAehC,EAAKgC,aAAazB,KAAlBN,OAAAO,EAAA,EAAAP,CAAAD,IACpBA,EAAKiC,SAASjC,EAAKiC,SAAS1B,KAAdN,OAAAO,EAAA,EAAAP,CAAAD,IAJHA,oEAMRmB,GACH,IAAIe,EAAM,WAAWf,EACrB9B,KAAKC,MAAM6C,OAAOhB,EAAG9B,KAAKC,MAAMqC,SAASJ,MAAMC,QAC/CnC,KAAKC,MAAM8B,QAAQC,KAAKa,0CAEZ,IAAAxB,EAAArB,KAEZ,OADWA,KAAKC,MAAMqB,KAAKyB,OACbxB,IAAI,SAACC,GAAW,OAC5B/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASD,UAAU,UAAU+B,IAAKJ,EAAKwB,QAASjD,QAAS,kBAAIsB,EAAKqB,KAAKlB,EAAKwB,WAAWxB,EAAKyB,kDAK7GjD,KAAKC,MAAM8B,QAAQC,KAAK,CACtBC,SAAU,OACVC,MAAO,CAACgB,OAAQlD,KAAKC,MAAMqC,SAASJ,MAAMC,2CAQ5C,IAJO,IAAAgB,EAAAnD,KACHoD,EAAOpD,KAAKC,MAAMqB,KAAK8B,KAEvBC,EAAS,GACLC,EAAE,EAAEA,EAAEF,EAAKG,OAAOD,IAExB,GAAGF,EAAKE,GAAGzB,QAAU7B,KAAKC,MAAMqC,SAASJ,MAAMC,OAAO,CACpDkB,EAASD,EAAKE,GAAG5B,SACjB,MAGJ,OACEjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKS,IAAKiD,EAAU/C,IAAI,iBAE1Bb,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACZG,KAAK2C,gBAERlD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASD,UAAU,MAAME,QAASC,KAAK4C,UAApD,aACAnD,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASD,UAAU,UAAUE,QAAS,kBAAKoD,EAAKlD,MAAM8B,QAAQC,KAAK,OAAhF,oBAlDYxB,cA0DTC,cAAWgC,WCzDpBe,qBACJ,SAAAA,EAAYvD,GAAM,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAwD,IAChB7C,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA4C,GAAAxC,KAAAhB,KAAMC,KACDwD,WAAW9C,EAAK8C,WAAWvC,KAAhBN,OAAAO,EAAA,EAAAP,CAAAD,IAFAA,4EAOhB,IAFA,IAAIoC,EAAO/C,KAAKC,MAAMqB,KAAKyB,OACvBW,EAAS,GACLJ,EAAE,EAAEA,EAAEP,EAAOQ,OAAOD,IAC1B,GAAGP,EAAOO,GAAGN,SAAWhD,KAAKC,MAAMuC,MAAMmB,OAAOC,SAAS,CAEvDF,EAASX,EAAOO,GAChB,MAMJ,IAHA,IAAIO,EAAQ,GACRC,EAAOJ,EAASK,OAChBX,EAAOpD,KAAKC,MAAMqB,KAAK8B,KACnBE,EAAE,EAAEA,EAAEF,EAAKG,OAAOD,IACxB,IAAI,IAAIU,EAAE,EAAEA,EAAEF,EAAOP,OAAOS,IACvBF,EAAOE,IAAMZ,EAAKE,GAAGzB,OAEtBgC,EAAQ7B,KAAKoB,EAAKE,IAKxB,OAAOO,EAAQtC,IAAI,SAACC,GAAW,OAC7B/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAD,CAAMpB,IAAKmB,EAAKE,SAAUvB,OAAO,SAASI,MAAOiB,EAAKG,SAAUC,IAAKJ,EAAKK,MAAO3B,OAAQ,kBAAK+D,MAAM,gEAQxG,IAJO,IAAA5C,EAAArB,KAEH+C,EAAS/C,KAAKC,MAAMqB,KAAKyB,OACzBxC,EAAM,GACF+C,EAAE,EAAEA,EAAEP,EAAOQ,OAAOD,IAE1B,GAAGP,EAAOO,GAAGN,SAAWhD,KAAKC,MAAMuC,MAAMmB,OAAOC,SAAS,CAEvDrD,EAAMwC,EAAOO,GAAGL,WAChB,MAIJ,OACExD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,UAAKY,GACLd,EAAAC,EAAAC,cAAA,WACGK,KAAKyD,cAERhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASD,UAAU,SAASE,QAAS,kBAAMsB,EAAKpB,MAAM8B,QAAQC,KAAK,OAAhF,yBAtDQxB,cA8DLC,cAAW+C,GC/DpBU,qBACJ,SAAAA,EAAYjE,GAAM,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAkE,IAChBvD,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAsD,GAAAlD,KAAAhB,KAAMC,KACDkE,YAAYxD,EAAKwD,YAAYjD,KAAjBN,OAAAO,EAAA,EAAAP,CAAAD,IACjBA,EAAKuB,MAAM,CACTkC,UAAU,IAJIzD,6EAWhB,IAFA,IAAIoC,EAAO/C,KAAKC,MAAMqB,KAAKyB,OACvBsB,GAAQ,EACJf,EAAE,EAAEA,EAAEP,EAAOQ,OAAOD,IACvBP,EAAOO,GAAGN,QAAQqB,IACnBA,EAAOtB,EAAOO,GAAGN,SAIrB,IAAIsB,EAAU,CAACtB,QAAUqB,EAAO,EAAIpB,WAAYjD,KAAKkC,MAAMkC,UAAWL,OAAQ,CAAC/D,KAAKC,MAAMqC,SAASJ,MAAMgB,SACzGlD,KAAKC,MAAMsE,OAAOD,GAClB,IAAIE,EAAO,YAAYH,EAAO,GAC9BrE,KAAKC,MAAM8B,QAAQC,KAAKwC,oCAEjB,IAAAnD,EAAArB,KACP,OACEP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OAAO2E,KAAK,YAAYC,MAAO1E,KAAKkC,MAAMkC,UAAWvE,UAAU,OAAO8E,SAAU,SAACC,GAAD,OAAUvD,EAAKwD,SAAS,CAACT,UAAWQ,EAAKE,OAAOJ,YAE5IjF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASD,UAAU,SAASE,QAASC,KAAKmE,aAAvD,8BAhCW3D,cAwCRC,cAAWyD,GCpCpBa,cACJ,SAAAA,IAAa,IAAApE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAA+E,IACXpE,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAmE,GAAA/D,KAAAhB,QACKgF,cAAcrE,EAAKqE,cAAc9D,KAAnBN,OAAAO,EAAA,EAAAP,CAAAD,IACnBA,EAAKsE,eAAetE,EAAKsE,eAAe/D,KAApBN,OAAAO,EAAA,EAAAP,CAAAD,IACpBA,EAAKuE,UAAUvE,EAAKuE,UAAUhE,KAAfN,OAAAO,EAAA,EAAAP,CAAAD,IACfA,EAAKwE,SAASxE,EAAKwE,SAASjE,KAAdN,OAAAO,EAAA,EAAAP,CAAAD,IACdA,EAAKuB,MAAM,CACTa,OAAO,CACL,CACEC,QAAS,EACTC,WAAY,WACZc,OAAQ,CAAC,EAAE,IAEb,CACEf,QAAS,EACTC,WAAY,WACZc,OAAQ,CAAC,KAGbX,KAAK,CACH,CACEvB,MAAO,EACPF,SAAU,UACVD,SAAU,4QACV0D,WAAY,GAEd,CACEvD,MAAO,EACPF,SAAU,UACVD,SAAU,mEACV0D,WAAY,GAEd,CACEvD,MAAO,EACPF,SAAU,YACVD,SAAU,4QACV0D,WAAY,GAEd,CACEvD,MAAO,EACPF,SAAU,WACVD,SAAU,4QACV0D,YAAa,GAEf,CACEvD,MAAO,EACPF,SAAU,WACVD,SAAU,4IACV0D,YAAa,KAhDRzE,0EAsDX,IAAI,IAAIiB,KAAO5B,KAAKkC,MAAO,CACzB,IAAIwC,EAAQrC,OAAOgD,aAAaC,QAAQ1D,GACxC8C,EAAQa,KAAKC,MAAMd,GACnB1E,KAAK6E,SAALjE,OAAA6E,EAAA,EAAA7E,CAAA,GAAgBgB,EAAM8C,yCAKxB,IAAK,IAAI9C,KADTqC,MAAM,gBACUjE,KAAKkC,MACnBG,OAAOgD,aAAaK,QAAQ9D,EAAK2D,KAAKI,UAAU3F,KAAKkC,MAAMN,4CAGhDgE,GACb,IAAIC,EAAW7F,KAAKkC,MAAMa,OAC1B8C,EAAW7D,KAAK4D,GAChB5F,KAAK6E,SAAS,CAAC9B,OAAQ8C,0CAEXC,EAAIC,GAEhB,IADA,IAAIC,EAAKhG,KAAKkC,MAAMa,OACZO,EAAE,EAAEA,EAAE0C,EAAKzC,OAAOD,IACrB0C,EAAK1C,GAAGN,SAAW8C,GACpBE,EAAK1C,GAAGS,OAAO/B,KAAK+D,GAGxB/F,KAAK6E,SAAS,CAAC9B,OAAQiD,gDAGvBhG,KAAK6E,SAAS,CAACzB,KAAM6C,EAAQ7C,wCAEvB,IAAA/B,EAAArB,KACN,OACAP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAM,EAACC,UAAW,kBAAK9G,EAAAC,EAAAC,cAAC6G,EAAD,CAAKlF,KAAMD,EAAKa,MAAMkB,UACnE3D,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,QAAM,EAACC,UAAW,kBAAK9G,EAAAC,EAAAC,cAAC8G,EAAD,CAAWnF,KAAMD,EAAKa,MAAOY,OAAQzB,EAAK2D,mBAC3FvF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,oBAAoBC,OAAK,EAACC,QAAM,EAACC,UAAW,kBAAM9G,EAAAC,EAAAC,cAAC+G,EAAD,CAAOpF,KAAMD,EAAKa,WAChFzC,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,KAAK,OAAOC,OAAK,EAACC,QAAM,EAACC,UAAW,kBAAM9G,EAAAC,EAAAC,cAACgH,EAAD,CAAUrF,KAAMD,EAAKa,MAAOqC,OAAQlD,EAAK4D,6BA3F7EzE,aAkGNC,cAAWsE,GClG1B6B,IAASC,OAAOpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAeH,EAAAC,EAAAC,cAACmH,EAAD,OAA4BC,SAASC,eAAe,SLyH7E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.cb4cfc32.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../CSS/Pin2.css\";\nimport { BrowserRouter ,withRouter} from 'react-router-dom';\n\n\nclass Pin2 extends Component {\n  render() {\n    return (\n            <BrowserRouter>\n                <div className=\"pin\">\n                  <button type=\"button\" className=\"button\" onClick={this.props.change}>{this.props.action}</button>\n                  <img src={this.props.URL} alt=\"not present\" className=\"image\" />\n                  <p>{this.props.title}</p>\n                </div>\n          </BrowserRouter>\n    );\n  }\n}\n\nexport default withRouter(Pin2);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Pin2 from './Components/Pin2.js';\nimport { BrowserRouter ,withRouter} from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.renderPins = this.renderPins.bind(this);\n      this.display = this.display.bind(this);\n  }\n  renderPins(){\n    return this.props.data.map((item) => { return(\n      <div>\n        <Pin2 URL={item.pinImage} title={item.pinTitle} key={item.pinId} action=\"Save\" change={()=> this.display(item.pinId)} />\n      </div>\n    )});\n  }\n\n  display(id) {\n    this.props.history.push({\n      pathname: '/save',\n      state: {pin_Id: id}\n    });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"pin-container1\">\n      {this.renderPins()}\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport \"../CSS/SaveBoard.css\";\nimport { BrowserRouter ,withRouter} from 'react-router-dom';\n\nclass SaveBoard extends Component {\n  constructor(){\n    super();\n    this.move = this.move.bind(this);\n    this.displayBoard = this.displayBoard.bind(this);\n    this.addBoard=this.addBoard.bind(this);\n    }\n  move(id){\n    let url = \"/boards/\"+id;\n    this.props.addPin(id,this.props.location.state.pin_Id);\n    this.props.history.push(url);\n  }\n  displayBoard(){\n    let boards=this.props.data.boards;\n    return boards.map((item) => { return(\n      <div>\n        <button type=\"button\" className=\"buttons\" key={item.boardId} onClick={()=>this.move(item.boardId)}>{item.boardTitle}</button>\n      </div>\n    )});\n  }\n  addBoard(){\n    this.props.history.push({\n      pathname: '/add',\n      state: {pin_id: this.props.location.state.pin_Id}\n  });\n}\n\n  render() {\n    let pins = this.props.data.pins;\n\n    let imageURL=\"\";\n    for(let i=0;i<pins.length;i++){\n      //alert(pins[i].pinId+\" \"+ this.props.location.state.pin_Id);\n      if(pins[i].pinId === this.props.location.state.pin_Id){\n        imageURL=pins[i].pinImage;\n        break;\n      }\n    }\n    return (\n      <BrowserRouter>\n        <div className=\"main\">\n          <div className=\"img\">\n            <img src={imageURL} alt=\"not present\" />\n          </div>\n          <h1>Select a board</h1>\n          <div className=\"horizontalButtons\">\n            {this.displayBoard()}\n          </div>\n          <div className=\"newBoard\">\n            <button type=\"button\" className=\"add\" onClick={this.addBoard}>New Board</button>\n            <button type=\"button\" className=\"buttons\" onClick={() =>this.props.history.push('/')}>Cancel</button>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withRouter(SaveBoard);\n","import React, { Component } from 'react';\nimport \"../CSS/Board.css\";\nimport { BrowserRouter ,withRouter} from 'react-router-dom';\nimport Pin2 from './Pin2';\n\nclass Board extends Component {\n  constructor(props){\n    super(props);\n    this.displayPin=this.displayPin.bind(this);\n  }\n  displayPin(){\n    let boards=this.props.data.boards;\n    let selected={};\n    for(let i=0;i<boards.length;i++){\n      if(boards[i].boardId == this.props.match.params.board_id){\n        //alert(boards[i].boardTitle);\n        selected=boards[i];\n        break;\n      }\n    }\n    let pinList=[];\n    let pinids=selected.pinIds;\n    let pins = this.props.data.pins;\n    for(let i=0;i<pins.length;i++){\n      for(let j=0;j<pinids.length;j++){\n        if(pinids[j] == pins[i].pinId){\n        //alert(boards[i].boardTitle);\n          pinList.push(pins[i]);\n      }\n    }\n  }\n\n    return pinList.map((item) => { return(\n      <div>\n        <Pin2 URL={item.pinImage} action=\"Remove\" title={item.pinTitle} key={item.pinId} change={()=> alert('Yet to be implemented')} />\n      </div>\n    )});\n  }\n  render() {\n    //alert(this.props.match.params.board_id);\n    let boards = this.props.data.boards;\n    let title=\"\";\n    for(let i=0;i<boards.length;i++){\n      //alert(boards[i].boardId);\n      if(boards[i].boardId == this.props.match.params.board_id){\n        //alert(boards[i].boardTitle);\n        title=boards[i].boardTitle;\n        break;\n      }\n    }\n\n    return (\n      <BrowserRouter>\n        <div className=\"main3\">\n          <h1>{title}</h1>\n          <div>\n            {this.displayPin()}\n          </div>\n          <div>\n            <button type=\"button\" className=\"browse\" onClick={() => this.props.history.push(\"/\")}>Browse More</button>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withRouter(Board);\n","import React, { Component } from 'react';\nimport \"../CSS/NewBoard.css\";\nimport { BrowserRouter ,withRouter} from 'react-router-dom';\n\nclass NewBoard extends Component {\n  constructor(props){\n    super(props);\n    this.createBoard=this.createBoard.bind(this);\n    this.state={\n      boardname:\"\"\n    };\n  }\n\n  createBoard(){\n    let boards=this.props.data.boards;\n    let max_id=-1;\n    for(let i=0;i<boards.length;i++){\n      if(boards[i].boardId>max_id){\n        max_id=boards[i].boardId;\n      }\n    }\n    //alert(max_id+1);\n    let newboard= {boardId: (max_id+1), boardTitle: this.state.boardname, pinIds: [this.props.location.state.pin_id]};\n    this.props.create(newboard);\n    let newurl=\"/boards/\"+(max_id+1);\n    this.props.history.push(newurl);\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"main2\">\n          <div className=\"boardName\">\n          <h1> Enter name for new board</h1>\n          <input type=\"text\" name=\"boardname\" value={this.state.boardname} className=\"text\" onChange={(text) => this.setState({boardname: text.target.value})} />\n          </div>\n          <div>\n            <button type=\"button\" className=\"addPin\" onClick={this.createBoard}>Add pin to board</button>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withRouter(NewBoard);\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter as Router ,withRouter, Switch} from 'react-router-dom';\nimport SaveBoard from \"./SaveBoard.js\";\nimport App from \"../App\";\nimport content from '../JSON/content.json';\nimport Board from \"./Board.js\";\nimport NewBoard from \"./NewBoard.js\";\n\nclass Common extends Component{\n  constructor(){\n    super();\n    this.addPinToBoard=this.addPinToBoard.bind(this);\n    this.createNewBoard=this.createNewBoard.bind(this);\n    this.saveState=this.saveState.bind(this);\n    this.getState=this.getState.bind(this);\n    this.state={\n      boards:[\n        {\n          boardId: 1,\n          boardTitle: \" Board 1\",\n          pinIds: [1,3]\n        },\n        {\n          boardId: 2,\n          boardTitle: \" Board 2\",\n          pinIds: [2]\n        }\n      ],\n      pins:[\n        {\n          pinId: 1,\n          pinTitle: \"Pin One\",\n          pinImage: \"https://yourshot.nationalgeographic.com/u/fQYSUbVfts-T7odkrFJckdiFeHvab0GWOfzhj7tYdC0uglagsDNeZgBTwzAr_V7Kjmx0JFsA6K63HKLovqzbX_NnJVE6qLV0vb5qqx6F83qrUrvBsaM1pwoPown6MyOf6la0_dqMcTVNK7jrp49TzlQgsIwVA_K3KD0ecASQ3YNt0SBk86b721SIkaH8u35UptmfLlNznbR2sdrz0qa1Smu4cOrmKg/\",\n          pinboardId: 1\n        },\n        {\n          pinId: 2,\n          pinTitle: \"Pin Two\",\n          pinImage: \"https://dj2gsrxiy8cwl.cloudfront.net/images/JPEGmini_mac_300.jpg\",\n          pinboardId: 2\n        },\n        {\n          pinId: 3,\n          pinTitle: \"Pin Three\",\n          pinImage: \"https://yourshot.nationalgeographic.com/u/fQYSUbVfts-T7odkrFJckdiFeHvab0GWOfzhj7tYdC0uglagsDNeZgBTwzAr_V7Kjmx0JFsA6K63HKLovqzbX_NnJVE6qLV0vb5qqx6F83qrUrvBsaM1pwoPown6MyOf6la0_dqMcTVNK7jrp49TzlQgsIwVA_K3KD0ecASQ3YNt0SBk86b721SIkaH8u35UptmfLlNznbR2sdrz0qa1Smu4cOrmKg/\",\n          pinboardId: 1\n        },\n        {\n          pinId: 4,\n          pinTitle: \"Pin Four\",\n          pinImage: \"https://yourshot.nationalgeographic.com/u/fQYSUbVfts-T7odkrFJckdiFeHvab0GWOfzhj7tYdC0uglagsDNeZgBTwzAr_V7Kjmx0JFsA6K63HKLovqzbX_NnJVE6qLV0vb5qqx6F83qrUrvBsaM1pwoPown6MyOf6la0_dqMcTVNK7jrp49TzlQgsIwVA_K3KD0ecASQ3YNt0SBk86b721SIkaH8u35UptmfLlNznbR2sdrz0qa1Smu4cOrmKg/\",\n          pinboardId: -1\n        },\n        {\n          pinId: 5,\n          pinTitle: \"Pin Five\",\n          pinImage: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/PNG_transparency_demonstration_1.png/280px-PNG_transparency_demonstration_1.png\",\n          pinboardId: -1\n        }\n      ]\n    }\n  }\n  getState() {\n    for(let key in this.state) {\n      let value = window.localStorage.getItem(key);\n      value = JSON.parse(value);\n      this.setState({[key]: value});\n    }\n  }\n  saveState(){\n    alert(\"Saving state\")\n    for (let key in this.state){\n      window.localStorage.setItem(key, JSON.stringify(this.state(key)));\n    }\n  }\n  createNewBoard(board){\n    let board_copy=this.state.boards;\n    board_copy.push(board);\n    this.setState({boards: board_copy});\n  }\n  addPinToBoard(bid,pid){\n    let newB=this.state.boards;\n    for(let i=0;i<newB.length;i++){\n      if(newB[i].boardId == bid){\n        newB[i].pinIds.push(pid);\n      }\n    }\n    this.setState({boards: newB});\n  }\n  componentDidMount() {\n    this.setState({pins: content.pins});\n  }\n  render(){\n    return(\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact strict component={()=> <App data={this.state.pins} />} />\n        <Route path=\"/save\" exact strict component={()=> <SaveBoard data={this.state} addPin={this.addPinToBoard}/>} />\n        <Route path=\"/boards/:board_id\" exact strict component={() => <Board data={this.state} />} />\n        <Route path=\"/add\" exact strict component={() => <NewBoard data={this.state} create={this.createNewBoard} />} />\n      </Switch>\n    </Router>\n);\n}\n}\n\nexport default withRouter(Common);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link, BrowserRouter ,withRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Common from \"./Components/Common\";\n\nReactDOM.render(<BrowserRouter><Common /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}